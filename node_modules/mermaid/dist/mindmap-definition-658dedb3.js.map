{"version":3,"file":"mindmap-definition-658dedb3.js","sources":["../src/diagrams/mindmap/parser/mindmap.jison","../src/diagrams/mindmap/mindmapDb.js","../src/diagrams/mindmap/svgDraw.js","../src/diagrams/mindmap/mindmapRenderer.js","../src/diagrams/mindmap/styles.js","../src/diagrams/mindmap/mindmap-definition.ts"],"sourcesContent":["/** mermaid\n *  https://knsv.github.io/mermaid\n *  (c) 2015 Knut Sveidqvist\n *  MIT license.\n */\n%lex\n\n%options case-insensitive\n\n%{\n\t// Pre-lexer code can go here\n%}\n%x NODE\n%x NSTR\n%x ICON\n%x CLASS\n\n%%\n\n\\s*\\%\\%.*          {yy.getLogger().trace('Found comment',yytext);}\n// \\%\\%[^\\n]*\\n                             /* skip comments */\n\"mindmap\"\t\t       return 'MINDMAP';\n\":::\"              { this.begin('CLASS'); }\n<CLASS>.+\t\t\t     { this.popState();return 'CLASS'; }\n<CLASS>\\n\t\t\t\t   { this.popState();}\n// [\\s]*\"::icon(\"   { this.begin('ICON'); }\n\"::icon(\"   { yy.getLogger().trace('Begin icon');this.begin('ICON'); }\n[\\s]+[\\n]     {yy.getLogger().trace('SPACELINE');return 'SPACELINE'                 /* skip all whitespace */    ;}\n[\\n]+               return 'NL';\n<ICON>[^\\)]+\t\t\t { return 'ICON'; }\n<ICON>\\)\t\t\t\t   {yy.getLogger().trace('end icon');this.popState();}\n\"-)\"               { yy.getLogger().trace('Exploding node'); this.begin('NODE');return 'NODE_DSTART'; }\n\"(-\"               { yy.getLogger().trace('Cloud'); this.begin('NODE');return 'NODE_DSTART'; }\n\"))\"               { yy.getLogger().trace('Explosion Bang'); this.begin('NODE');return 'NODE_DSTART'; }\n\")\"               { yy.getLogger().trace('Cloud Bang'); this.begin('NODE');return 'NODE_DSTART'; }\n\"((\"               { this.begin('NODE');return 'NODE_DSTART'; }\n\"{{\"               { this.begin('NODE');return 'NODE_DSTART'; }\n\"(\"                { this.begin('NODE');return 'NODE_DSTART'; }\n\"[\"                { this.begin('NODE');return 'NODE_DSTART'; }\n[\\s]+              return 'SPACELIST'                 /* skip all whitespace */    ;\n// !(-\\()            return 'NODE_ID';\n[^\\(\\[\\n\\-\\)\\{\\}]+         return 'NODE_ID';\n<<EOF>>            return 'EOF';\n<NODE>[\"]          { yy.getLogger().trace('Starting NSTR');this.begin(\"NSTR\");}\n<NSTR>[^\"]+        { yy.getLogger().trace('description:', yytext); return \"NODE_DESCR\";}\n<NSTR>[\"]          {this.popState();}\n<NODE>[\\)]\\)         {this.popState();yy.getLogger().trace('node end ))');return \"NODE_DEND\";}\n<NODE>[\\)]         {this.popState();yy.getLogger().trace('node end )');return \"NODE_DEND\";}\n<NODE>[\\]]         {this.popState();yy.getLogger().trace('node end ...',yytext);return \"NODE_DEND\";}\n<NODE>\"}}\"         {this.popState();yy.getLogger().trace('node end ((');return \"NODE_DEND\";}\n<NODE>\"(-\"         {this.popState();yy.getLogger().trace('node end (-');return \"NODE_DEND\";}\n<NODE>\"-)\"         {this.popState();yy.getLogger().trace('node end (-');return \"NODE_DEND\";}\n<NODE>\"((\"         {this.popState();yy.getLogger().trace('node end ((');return \"NODE_DEND\";}\n<NODE>\"(\"          {this.popState();yy.getLogger().trace('node end ((');return \"NODE_DEND\";}\n<NODE>[^\\)\\]\\(\\}]+     { yy.getLogger().trace('Long description:', yytext);   return 'NODE_DESCR';}\n<NODE>.+(?!\\(\\()     { yy.getLogger().trace('Long description:', yytext);   return 'NODE_DESCR';}\n// [\\[]               return 'NODE_START';\n// .+                 return 'TXT' ;\n\n/lex\n\n%start start\n\n%% /* language grammar */\n\nstart\n// %{\t: info document 'EOF' { return yy; } }\n\t: mindMap\n  |\tspaceLines mindMap\n  ;\n\nspaceLines\n  : SPACELINE\n  | spaceLines SPACELINE\n  | spaceLines NL\n  ;\n\nmindMap\n  : MINDMAP document  { return yy; }\n  | MINDMAP NL document  { return yy; }\n  ;\n\nstop\n  : NL {yy.getLogger().trace('Stop NL ');}\n  | EOF {yy.getLogger().trace('Stop EOF ');}\n  | SPACELINE\n  | stop NL {yy.getLogger().trace('Stop NL2 ');}\n  | stop EOF {yy.getLogger().trace('Stop EOF2 ');}\n  ;\ndocument\n\t: document statement stop\n\t| statement stop\n\t;\n\nstatement\n\t: SPACELIST node       { yy.getLogger().info('Node: ',$2.id);yy.addNode($1.length, $2.id, $2.descr, $2.type);  }\n\t| SPACELIST ICON       { yy.getLogger().trace('Icon: ',$2);yy.decorateNode({icon: $2}); }\n\t| SPACELIST CLASS      { yy.decorateNode({class: $2}); }\n  | SPACELINE { yy.getLogger().trace('SPACELIST');}\n\t| node\t\t\t\t\t       { yy.getLogger().trace('Node: ',$1.id);yy.addNode(0, $1.id, $1.descr, $1.type);  }\n\t| ICON                 { yy.decorateNode({icon: $1}); }\n\t| CLASS                { yy.decorateNode({class: $1}); }\n  | SPACELIST\n\t;\n\n\n\nnode\n  :nodeWithId\n  |nodeWithoutId\n  ;\n\nnodeWithoutId\n  :   NODE_DSTART NODE_DESCR NODE_DEND\n\t      { yy.getLogger().trace(\"node found ..\", $1); $$ = { id: $2, descr: $2, type: yy.getType($1, $3) }; }\n  ;\n\nnodeWithId\n\t:  NODE_ID             { $$ = { id: $1, descr: $1, type: yy.nodeType.DEFAULT }; }\n\t|  NODE_ID NODE_DSTART NODE_DESCR NODE_DEND\n\t                       { yy.getLogger().trace(\"node found ..\", $1); $$ = { id: $1, descr: $3, type: yy.getType($2, $4) }; }\n\t;\n%%\n","import { getConfig } from '../../config';\nimport { sanitizeText as _sanitizeText } from '../../diagrams/common/common';\nimport { log } from '../../logger';\n\nexport const sanitizeText = (text) => _sanitizeText(text, getConfig());\n\nlet nodes = [];\nlet cnt = 0;\nlet elements = {};\nexport const clear = () => {\n  nodes = [];\n  cnt = 0;\n  elements = {};\n};\n\nconst getParent = function (level) {\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    if (nodes[i].level < level) {\n      return nodes[i];\n    }\n  }\n  // No parent found\n  return null;\n};\n\nexport const getMindmap = () => {\n  return nodes.length > 0 ? nodes[0] : null;\n};\nexport const addNode = (level, id, descr, type) => {\n  log.info('addNode', level, id, descr, type);\n  const conf = getConfig();\n  const node = {\n    id: cnt++,\n    nodeId: sanitizeText(id),\n    level,\n    descr: sanitizeText(descr),\n    type,\n    children: [],\n    width: getConfig().mindmap.maxNodeWidth,\n  };\n  switch (node.type) {\n    case nodeType.ROUNDED_RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n    case nodeType.RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n    case nodeType.HEXAGON:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n    default:\n      node.padding = conf.mindmap.padding;\n  }\n  const parent = getParent(level);\n  if (parent) {\n    parent.children.push(node);\n    // Keep all nodes in the list\n    nodes.push(node);\n  } else {\n    if (nodes.length === 0) {\n      // First node, the root\n      nodes.push(node);\n    } else {\n      // Syntax error ... there can only bee one root\n      let error = new Error(\n        'There can be only one root. No parent could be found for (\"' + node.descr + '\")'\n      );\n      error.hash = {\n        text: 'branch ' + name,\n        token: 'branch ' + name,\n        line: '1',\n        loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n        expected: ['\"checkout ' + name + '\"'],\n      };\n      throw error;\n    }\n  }\n};\n\nexport const nodeType = {\n  DEFAULT: 0,\n  NO_BORDER: 0,\n  ROUNDED_RECT: 1,\n  RECT: 2,\n  CIRCLE: 3,\n  CLOUD: 4,\n  BANG: 5,\n  HEXAGON: 6,\n};\n\nexport const getType = (startStr, endStr) => {\n  log.debug('In get type', startStr, endStr);\n  switch (startStr) {\n    case '[':\n      return nodeType.RECT;\n    case '(':\n      return endStr === ')' ? nodeType.ROUNDED_RECT : nodeType.CLOUD;\n    case '((':\n      return nodeType.CIRCLE;\n    case ')':\n      return nodeType.CLOUD;\n    case '))':\n      return nodeType.BANG;\n    case '{{':\n      return nodeType.HEXAGON;\n    default:\n      return nodeType.DEFAULT;\n  }\n};\n\nexport const setElementForId = (id, element) => {\n  elements[id] = element;\n};\n\nexport const decorateNode = (decoration) => {\n  const node = nodes[nodes.length - 1];\n  if (decoration && decoration.icon) {\n    node.icon = sanitizeText(decoration.icon);\n  }\n  if (decoration && decoration.class) {\n    node.class = sanitizeText(decoration.class);\n  }\n};\n\nexport const type2Str = (type) => {\n  switch (type) {\n    case nodeType.DEFAULT:\n      return 'no-border';\n    case nodeType.RECT:\n      return 'rect';\n    case nodeType.ROUNDED_RECT:\n      return 'rounded-rect';\n    case nodeType.CIRCLE:\n      return 'circle';\n    case nodeType.CLOUD:\n      return 'cloud';\n    case nodeType.BANG:\n      return 'bang';\n    case nodeType.HEXAGON:\n      return 'hexgon';\n    default:\n      return 'no-border';\n  }\n};\n\nexport let parseError;\nexport const setErrorHandler = (handler) => {\n  parseError = handler;\n};\n\n// Expose logger to grammar\nexport const getLogger = () => log;\n\nexport const getNodeById = (id) => nodes[id];\nexport const getElementById = (id) => elements[id];\n","import { select } from 'd3';\nimport * as db from './mindmapDb';\nconst MAX_SECTIONS = 12;\n\n/**\n * @param {string} text The text to be wrapped\n * @param {number} width The max width of the text\n */\nfunction wrap(text, width) {\n  text.each(function () {\n    var text = select(this),\n      words = text\n        .text()\n        .split(/(\\s+|<br>)/)\n        .reverse(),\n      word,\n      line = [],\n      lineHeight = 1.1, // ems\n      y = text.attr('y'),\n      dy = parseFloat(text.attr('dy')),\n      tspan = text\n        .text(null)\n        .append('tspan')\n        .attr('x', 0)\n        .attr('y', y)\n        .attr('dy', dy + 'em');\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(' ').trim());\n      if (tspan.node().getComputedTextLength() > width || word === '<br>') {\n        line.pop();\n        tspan.text(line.join(' ').trim());\n        if (word === '<br>') {\n          line = [''];\n        } else {\n          line = [word];\n        }\n\n        tspan = text\n          .append('tspan')\n          .attr('x', 0)\n          .attr('y', y)\n          .attr('dy', lineHeight + 'em')\n          .text(word);\n      }\n    }\n  });\n}\n\nconst defaultBkg = function (elem, node, section) {\n  const rd = 5;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr(\n      'd',\n      `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${\n        node.width - 2 * rd\n      } q5,0 5,5 v${node.height - rd} H0 Z`\n    );\n\n  elem\n    .append('line')\n    .attr('class', 'node-line-' + section)\n    .attr('x1', 0)\n    .attr('y1', node.height)\n    .attr('x2', node.width)\n    .attr('y2', node.height);\n};\nconst rectBkg = function (elem, node) {\n  elem\n    .append('rect')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr('height', node.height)\n    .attr('width', node.width);\n};\nconst cloudBkg = function (elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r1 = 0.15 * w;\n  const r2 = 0.25 * w;\n  const r3 = 0.35 * w;\n  const r4 = 0.2 * w;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr(\n      'd',\n      `M0 0 a${r1},${r1} 0 0,1 ${w * 0.25},${-1 * w * 0.1}\n      a${r3},${r3} 1 0,1 ${w * 0.4},${-1 * w * 0.1}\n      a${r2},${r2} 1 0,1 ${w * 0.35},${1 * w * 0.2}\n\n      a${r1},${r1} 1 0,1 ${w * 0.15},${1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${-1 * w * 0.15},${1 * h * 0.65}\n\n      a${r2},${r1} 1 0,1 ${-1 * w * 0.25},${w * 0.15}\n      a${r3},${r3} 1 0,1 ${-1 * w * 0.5},${0}\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.25},${-1 * w * 0.15}\n\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.1},${-1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${w * 0.1},${-1 * h * 0.65}\n\n    H0 V0 Z`\n    );\n};\nconst bangBkg = function (elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r = 0.15 * w;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr(\n      'd',\n      `M0 0 a${r},${r} 1 0,0 ${w * 0.25},${-1 * h * 0.1}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${1 * h * 0.1}\n\n      a${r},${r} 1 0,0 ${w * 0.15},${1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${1 * h * 0.34}\n      a${r},${r} 1 0,0 ${-1 * w * 0.15},${1 * h * 0.33}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${h * 0.15}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${-1 * h * 0.15}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.1},${-1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${-1 * h * 0.34}\n      a${r},${r} 1 0,0 ${w * 0.1},${-1 * h * 0.33}\n\n    H0 V0 Z`\n    );\n};\nconst circleBkg = function (elem, node) {\n  elem\n    .append('circle')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr('r', node.width / 2);\n};\n\n/**\n *\n * @param parent\n * @param w\n * @param h\n * @param points\n * @param node\n */\nfunction insertPolygonShape(parent, w, h, points, node) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('transform', 'translate(' + (node.width - w) / 2 + ', ' + h + ')');\n}\n\nconst hexagonBkg = function (elem, node) {\n  const h = node.height;\n  const f = 4;\n  const m = h / f;\n  const w = node.width - node.padding + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(elem, w, h, points, node);\n};\n\nconst roundedRectBkg = function (elem, node) {\n  elem\n    .append('rect')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr('height', node.height)\n    .attr('rx', node.padding)\n    .attr('ry', node.padding)\n    .attr('width', node.width);\n};\n\n/**\n * @param {object} elem The D3 dom element in which the node is to be added\n * @param {object} node The node to be added\n * @param fullSection\n * @param {object} conf The configuration object\n * @returns {number} The height nodes dom element\n */\nexport const drawNode = function (elem, node, fullSection, conf) {\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const nodeElem = elem.append('g');\n  node.section = section;\n  let sectionClass = 'section-' + section;\n  if (section < 0) {\n    sectionClass += ' section-root';\n  }\n  nodeElem.attr('class', (node.class ? node.class + ' ' : '') + 'mindmap-node ' + sectionClass);\n  const bkgElem = nodeElem.append('g');\n\n  // Create the wrapped text element\n  const textElem = nodeElem.append('g');\n  const txt = textElem\n    .append('text')\n    .text(node.descr)\n    .attr('dy', '1em')\n    .attr('alignment-baseline', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize.replace ? conf.fontSize.replace('px', '') : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.width = bbox.width + 2 * node.padding;\n  if (node.icon) {\n    if (node.type === db.nodeType.CIRCLE) {\n      node.height += 50;\n      node.width += 50;\n      const icon = nodeElem\n        .append('foreignObject')\n        .attr('height', '50px')\n        .attr('width', node.width)\n        .attr('style', 'text-align: center;');\n      icon\n        .append('div')\n        .attr('class', 'icon-container')\n        .append('i')\n        .attr('class', 'node-icon-' + section + ' ' + node.icon);\n      textElem.attr(\n        'transform',\n        'translate(' + node.width / 2 + ', ' + (node.height / 2 - 1.5 * node.padding) + ')'\n      );\n    } else {\n      node.width += 50;\n      const orgHeight = node.height;\n      node.height = Math.max(orgHeight, 60);\n      const heightDiff = Math.abs(node.height - orgHeight);\n      const icon = nodeElem\n        .append('foreignObject')\n        .attr('width', '60px')\n        .attr('height', node.height)\n        .attr('style', 'text-align: center;margin-top:' + heightDiff / 2 + 'px;');\n\n      icon\n        .append('div')\n        .attr('class', 'icon-container')\n        .append('i')\n        .attr('class', 'node-icon-' + section + ' ' + node.icon);\n      textElem.attr(\n        'transform',\n        'translate(' + (25 + node.width / 2) + ', ' + (heightDiff / 2 + node.padding / 2) + ')'\n      );\n    }\n  } else {\n    textElem.attr('transform', 'translate(' + node.width / 2 + ', ' + node.padding / 2 + ')');\n  }\n\n  switch (node.type) {\n    case db.nodeType.DEFAULT:\n      defaultBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.ROUNDED_RECT:\n      roundedRectBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.RECT:\n      rectBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.CIRCLE:\n      bkgElem.attr('transform', 'translate(' + node.width / 2 + ', ' + +node.height / 2 + ')');\n      circleBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.CLOUD:\n      cloudBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.BANG:\n      bangBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.HEXAGON:\n      hexagonBkg(bkgElem, node, section, conf);\n      break;\n  }\n\n  // Position the node to its coordinate\n  // if (typeof node.x !== 'undefined' && typeof node.y !== 'undefined') {\n  //   nodeElem.attr('transform', 'translate(' + node.x + ',' + node.y + ')');\n  // }\n  db.setElementForId(node.id, nodeElem);\n  return node.height;\n};\n\nexport const drawEdge = function drawEdge(edgesElem, mindmap, parent, depth, fullSection) {\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const sx = parent.x + parent.width / 2;\n  const sy = parent.y + parent.height / 2;\n  const ex = mindmap.x + mindmap.width / 2;\n  const ey = mindmap.y + mindmap.height / 2;\n  const mx = ex > sx ? sx + Math.abs(sx - ex) / 2 : sx - Math.abs(sx - ex) / 2;\n  const my = ey > sy ? sy + Math.abs(sy - ey) / 2 : sy - Math.abs(sy - ey) / 2;\n  const qx = ex > sx ? Math.abs(sx - mx) / 2 + sx : -Math.abs(sx - mx) / 2 + sx;\n  const qy = ey > sy ? Math.abs(sy - my) / 2 + sy : -Math.abs(sy - my) / 2 + sy;\n\n  edgesElem\n    .append('path')\n    .attr(\n      'd',\n      parent.direction === 'TB' || parent.direction === 'BT'\n        ? `M${sx},${sy} Q${sx},${qy} ${mx},${my} T${ex},${ey}`\n        : `M${sx},${sy} Q${qx},${sy} ${mx},${my} T${ex},${ey}`\n    )\n    .attr('class', 'edge section-edge-' + section + ' edge-depth-' + depth);\n};\n\nexport const positionNode = function (node) {\n  const nodeElem = db.getElementById(node.id);\n\n  const x = node.x || 0;\n  const y = node.y || 0;\n  // Position the node to its coordinate\n  nodeElem.attr('transform', 'translate(' + x + ',' + y + ')');\n};\n\nexport default { drawNode, positionNode, drawEdge };\n","/** Created by knut on 14-12-11. */\nimport { select } from 'd3';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\nimport svgDraw from './svgDraw';\nimport * as db from './mindmapDb';\n\nlet cytoscape;\n/**\n * @param {any} svg The svg element to draw the diagram onto\n * @param {object} mindmap The mindmap data and hierarchy\n * @param section\n * @param {object} conf The configuration object\n */\nfunction drawNodes(svg, mindmap, section, conf) {\n  svgDraw.drawNode(svg, mindmap, section, conf);\n  if (mindmap.children) {\n    mindmap.children.forEach((child, index) => {\n      drawNodes(svg, child, section < 0 ? index : section, conf);\n    });\n  }\n}\n\n/**\n * @param edgesEl\n * @param cy\n */\nfunction drawEdges(edgesEl, cy) {\n  cy.edges().map((edge, id) => {\n    const data = edge.data();\n    if (edge[0]._private.bodyBounds) {\n      const bounds = edge[0]._private.rscratch;\n      log.trace('Edge: ', id, data);\n      edgesEl\n        .insert('path')\n        .attr(\n          'd',\n          `M ${bounds.startX},${bounds.startY} L ${bounds.midX},${bounds.midY} L${bounds.endX},${bounds.endY} `\n        )\n        .attr('class', 'edge section-edge-' + data.section + ' edge-depth-' + data.depth);\n    }\n  });\n}\n\n/**\n * @param mindmap The mindmap data and hierarchy\n * @param cy\n * @param conf The configuration object\n * @param level\n */\nfunction addNodes(mindmap, cy, conf, level) {\n  cy.add({\n    group: 'nodes',\n    data: {\n      id: mindmap.id,\n      labelText: mindmap.descr,\n      height: mindmap.height,\n      width: mindmap.width,\n      level: level,\n      nodeId: mindmap.id,\n      padding: mindmap.padding,\n      type: mindmap.type,\n    },\n    position: {\n      x: mindmap.x,\n      y: mindmap.y,\n    },\n  });\n  if (mindmap.children) {\n    mindmap.children.forEach((child) => {\n      addNodes(child, cy, conf, level + 1);\n      cy.add({\n        group: 'edges',\n        data: {\n          id: `${mindmap.id}_${child.id}`,\n          source: mindmap.id,\n          target: child.id,\n          depth: level,\n          section: child.section,\n        },\n      });\n    });\n  }\n}\n\n/**\n * @param node\n * @param conf\n * @param cy\n */\nasync function layoutMindmap(node, conf) {\n  if (!cytoscape) {\n    cytoscape = (await import('cytoscape')).default;\n    const coseBilkent = (await import('cytoscape-cose-bilkent')).default;\n    // Inject the layout algorithm into cytoscape\n    cytoscape.use(coseBilkent);\n  }\n\n  return new Promise((resolve) => {\n    // Add temporary render element\n    const renderEl = select('body').append('div').attr('id', 'cy').attr('style', 'display:none');\n    const cy = cytoscape({\n      container: document.getElementById('cy'), // container to render in\n      style: [\n        {\n          selector: 'edge',\n          style: {\n            'curve-style': 'bezier',\n          },\n        },\n      ],\n    });\n    // Remove element after layout\n    renderEl.remove();\n    addNodes(node, cy, conf, 0);\n\n    // Make cytoscape care about the dimensions of the nodes\n    cy.nodes().forEach(function (n) {\n      n.layoutDimensions = () => {\n        const data = n.data();\n        return { w: data.width, h: data.height };\n      };\n    });\n\n    cy.layout({\n      name: 'cose-bilkent',\n      quality: 'proof',\n      // headless: true,\n      styleEnabled: false,\n      animate: false,\n    }).run();\n    cy.ready((e) => {\n      log.info('Ready', e);\n      resolve(cy);\n    });\n  });\n}\n/**\n * @param node\n * @param cy\n * @param positionedMindmap\n * @param conf\n */\nfunction positionNodes(cy) {\n  cy.nodes().map((node, id) => {\n    const data = node.data();\n    data.x = node.position().x;\n    data.y = node.position().y;\n    svgDraw.positionNode(data);\n    const el = db.getElementById(data.nodeId);\n    log.info('Id:', id, 'Position: (', node.position().x, ', ', node.position().y, ')', data);\n    el.attr(\n      'transform',\n      `translate(${node.position().x - data.width / 2}, ${node.position().y - data.height / 2})`\n    );\n    el.attr('attr', `apa-${id})`);\n  });\n}\n\n/**\n * Draws a an info picture in the tag with id: id based on the graph definition in text.\n *\n * @param {any} text\n * @param {any} id\n * @param {any} version\n * @param diagObj\n */\n\nexport const draw = async (text, id, version, diagObj) => {\n  const conf = getConfig();\n\n  // This is done only for throwing the error if the text is not valid.\n  diagObj.db.clear();\n  // Parse the graph definition\n  diagObj.parser.parse(text);\n\n  log.debug('Renering info diagram\\n' + text);\n\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  // Parse the graph definition\n\n  const svg = root.select('#' + id);\n\n  svg.append('g');\n  const mm = diagObj.db.getMindmap();\n\n  // Draw the graph and start with drawing the nodes without proper position\n  // this gives us the size of the nodes and we can set the positions later\n\n  const edgesElem = svg.append('g');\n  edgesElem.attr('class', 'mindmap-edges');\n  const nodesElem = svg.append('g');\n  nodesElem.attr('class', 'mindmap-nodes');\n  drawNodes(nodesElem, mm, -1, conf);\n\n  // Next step is to layout the mindmap, giving each node a position\n\n  const cy = await layoutMindmap(mm, conf);\n\n  // // After this we can draw, first the edges and the then nodes with the correct position\n  drawEdges(edgesElem, cy, conf);\n  positionNodes(cy, conf);\n\n  // Setup the view box and size of the svg element\n  setupGraphViewbox(undefined, svg, conf.mindmap.padding, conf.mindmap.useMaxWidth);\n};\n\nexport default {\n  draw,\n};\n","import { darken, lighten, isDark } from 'khroma';\n\nconst genSections = (options) => {\n  let sections = '';\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options['lineColor' + i] = options['lineColor' + i] || options['cScaleInv' + i];\n    if (isDark(options['lineColor' + i])) {\n      options['lineColor' + i] = lighten(options['lineColor' + i], 20);\n    } else {\n      options['lineColor' + i] = darken(options['lineColor' + i], 20);\n    }\n  }\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = '' + (17 - 3 * i);\n    sections += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${\n      i - 1\n    } polygon, .section-${i - 1} path  {\n      fill: ${options['cScale' + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options['cScaleLabel' + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options['cScaleLabel' + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options['cScale' + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options['cScaleInv' + i]} ;\n      stroke-width: 3;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections;\n};\n\nconst getStyles = (options) =>\n  `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle, .section-root polygon  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n`;\nexport default getStyles;\n","// @ts-ignore: TODO Fix ts errors\nimport mindmapParser from './parser/mindmap';\nimport * as mindmapDb from './mindmapDb';\nimport mindmapRenderer from './mindmapRenderer';\nimport mindmapStyles from './styles';\n\nexport const diagram = {\n  db: mindmapDb,\n  renderer: mindmapRenderer,\n  parser: mindmapParser,\n  styles: mindmapStyles,\n};\n"],"names":["parser","o","k","v","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","yytext","yyleng","yylineno","yy","yystate","$$","_$","$0","str","hash","error","input","self","stack","tstack","vstack","lstack","table","TERROR","EOF","args","lexer","sharedState","yyloc","ranges","lex","token","symbol","state","action","r","yyval","p","len","newState","expected","errStr","ch","lines","oldLines","n","past","next","pre","c","match","indexed_rule","backup","tempMatch","index","rules","i","condition","yy_","$avoiding_name_collisions","YY_START","Parser","sanitizeText","text","_sanitizeText","getConfig","nodes","cnt","elements","clear","getParent","level","getMindmap","addNode","id","descr","type","log","conf","node","nodeType","parent","getType","startStr","endStr","setElementForId","element","decorateNode","decoration","type2Str","parseError","setErrorHandler","handler","getLogger","getNodeById","getElementById","MAX_SECTIONS","wrap","width","select","words","word","line","lineHeight","y","dy","tspan","j","defaultBkg","elem","section","db.type2Str","rectBkg","cloudBkg","w","h","r1","r2","r3","r4","bangBkg","circleBkg","insertPolygonShape","points","d","hexagonBkg","m","roundedRectBkg","drawNode","fullSection","nodeElem","sectionClass","bkgElem","textElem","bbox","fontSize","db.nodeType","orgHeight","heightDiff","db.setElementForId","drawEdge","edgesElem","mindmap","depth","sx","sy","ex","ey","mx","my","qx","qy","positionNode","db.getElementById","x","svgDraw","cytoscape","drawNodes","svg","child","drawEdges","edgesEl","cy","edge","data","bounds","addNodes","layoutMindmap","coseBilkent","resolve","renderEl","e","positionNodes","el","draw","version","diagObj","securityLevel","sandboxElement","mm","nodesElem","setupGraphViewbox","mindmapRenderer","genSections","options","sections","isDark","lighten","darken","sw","getStyles","mindmapStyles","diagram","mindmapDb","mindmapParser"],"mappings":"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"}